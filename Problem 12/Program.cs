/*  The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

    Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
    We can see that 28 is the first triangle number to have over five divisors.

    What is the value of the first triangle number to have over five hundred divisors?  */

// Formula for triangle numbers is (n/2)(n+1)

using System.Diagnostics;
Stopwatch sw = Stopwatch.StartNew();

int NumOfFactors(int number)
{
    List<int> PrimeFactorArr = PrimeFactors(number).ToList();

    List<List<int>> PrimeFactorList = new();

    while (PrimeFactorArr.Count > 0)
    {
        int cnum = PrimeFactorArr[0];
        int count = PrimeFactorArr.Where(x => x.Equals(cnum)).Count();
        PrimeFactorList.Add(new List<int> { cnum, count });
        for (int i = 0; i < count; i++)
        {
            PrimeFactorArr.RemoveAt(0);
        }
    }
    int product = 1;
    for (int i = 0; i < PrimeFactorList.Count; i++)
    {
        product *= (PrimeFactorList[i][1] + 1);
    }
    return product;
}

// PRIME FACTORS OF A NUMBER ALGORITHM
int[] PrimeFactors(int n)
{
    List<int> results = new List<int>();
    while (n % 2 == 0)
    {
        results.Add(2);
        n /= 2;
    }

    for (int i = 3; i < Math.Sqrt(n); i += 2)
    {
        while (n % i == 0)
        {
            results.Add(i);
            n /= i;
        }
    }
    if (n > 2) { results.Add(n); }

    return results.ToArray();
}

bool done = false;
int counter = 1;
int triangle_n = 0;
while (!done)
{
    triangle_n = Convert.ToInt32(counter*(counter+1)*0.5);
    if (NumOfFactors(triangle_n)>500)
        done = true;
    counter++;
}
Console.WriteLine($"Value of first triangle number with more than 500 factors is {triangle_n}");

sw.Stop();
Console.WriteLine($"Elapsed time: {sw.Elapsed.TotalMilliseconds} ms");

